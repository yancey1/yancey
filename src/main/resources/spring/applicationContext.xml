<?xml version="1.0" encoding="UTF-8"?>
<beans 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"    	
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-2.0.xsd	
		 	http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/context
		    http://www.springframework.org/schema/context/spring-context-3.0.xsd           
            " default-autowire="byName">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- ========================== shiro : Start ========================== -->
	<!-- shiro为集成spring -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		<property name="exceptionMappings">  
			<props>  
				<prop key="org.apache.shiro.authz.UnauthorizedException">/error/nopermission</prop>
			</props>  
		</property>
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/"/>
		<property name="successUrl" value="/user/index"/> 
		<property name="unauthorizedUrl" value="/error/nopermission"/>
		<property name="filterChainDefinitions">
			<value>
				/ = anon
				/captchaImage = anon
				/login = anon
				/apk/** = authc
				/apkUpdate/** = authc
				/assembly/** = authc
				/cache/** = authc
				/channel/** = authc
				/company/** = authc
				/group/** = authc
				/image/** = authc
				/keyword/** = authc
				/label/** = authc
				/market/** = authc
				/marketGroup/** = authc
				/menu/** = authc, roles[admin]
				/report/** = authc
				/role/** = authc, roles[admin]
				/silent/** = authc
				/topic/** = authc
				/user/index = authc
				/user/resetPwd = authc
				/user/** = authc, roles[admin]
				/recommond/** = authc				
			</value>
		</property>
	</bean>
	
	<!--自定义Realm 继承自AuthorizingRealm -->
	<bean id="monitorRealm" class="com.yancey.manager.security.MonitorRealm"></bean>
	<!-- securityManager -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="monitorRealm" />
		<property name="sessionMode" value="native"/>
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<bean id="sessionManager"
	    class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="sessionDAO" />
	    <property name="globalSessionTimeout" value="3600000"/>
	</bean>
	
	<bean id="sessionDAO"
	    class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
	</bean>
    
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- 启用shiro为spring配置的bean注释，只运行在lifecycleBeanProcessor之后  -->
	<bean id="annotationProxy" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<!-- 启用shrio授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- ========================== shiro : End ========================== -->
	
    <!-- 系统日志AOP配置 -->
	<aop:aspectj-autoproxy/>   
	<bean id="logAspect" class="com.yancey.manager.aop.LogAspect">
	    <property name="systemLogService" ref="systemLogService"/>
	</bean>    
	<aop:config>  
        <aop:aspect ref="logAspect">  
            <aop:pointcut id="logPointCut" expression="execution(* com.yancey.manager.service.impl.log.*.*(..))"/>  
            <aop:around pointcut-ref="logPointCut" method="doSystemLog"/>  
        </aop:aspect>  
	</aop:config>  	
	
</beans>
